{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-jsx","path":"/git-setup/","result":{"data":{"markdownRemark":{"html":"<h1>githubセットアップガイド</h1>\n<p>2021年7月10日時点の情報です。\nどうしても動かなかったら山Tか山Dまで。\nまず，<a href=\"/old/v1/wsl2-setup\">WSLのセットアップ</a>を完了させておいてください。</p>\n<h2>用語解説</h2>\n<p>リポジトリ：gitではコードを保存する場所を指す。\nローカル：主に自分や他の開発者のコンピュータ。\nリモート：ローカルからのの情報を管理するコンピュータ。\nローカルリポジトリ：ローカルにあるリポジトリ。開発者の端末の分だけある。\nリモートリポジトリ：リモートにあるリポジトリ。一つしかない。</p>\n<h3>git</h3>\n<p>gitとはよく使われている分散型バージョン管理ツールです。\nまた、リモートサーバーを使う事で複数人での開発も可能です。</p>\n<h3>github</h3>\n<p>githubは先ほど紹介したgitのリモートサーバーで無料で使うことができるツールです。\n自分でリモートサーバを建てるのはめんどくさいですがgithubを利用することで簡単にリモートリポジトリが作れ、\n他の人との共同開発も簡単にできるようになります。</p>\n<p>この記事ではgithubを使った方法について書きます。</p>\n<h2>実行環境</h2>\n<p>OS: debian 11.0\nシェル: bash</p>\n<h2>gitのインストール</h2>\n<p>gitをインストールします。</p>\n<pre><code class=\"language-bash\">sudo apt-get update\nsudo apt-get install -y git\n</code></pre>\n<p>gitに管理させるディレクトリを作ります。</p>\n<pre><code class=\"language-bash\">mkdir ~/dhirekutori\n</code></pre>\n<p>これでとりあえずパソコン側の準備が終わったのでgithubに移動します。</p>\n<h2>githubのセットアップと使い方</h2>\n<p>まずgithubのアカウントを作ります。\n\"sign up\"のボタンから作ります。\nその後、画面にある\"Repositories\"のところにある\"New\"を押してリポジトリを作ります。\nリポジトリを作る画面では\"Repository name\"というところにはリポジトリの名前を、\"Description\"のところには説明を入れますが説明はなくても大丈夫です。\nその下の\"Public\"か\"Private\"を選ぶところでリポジトリを公開するか(Public)、非公開(Private)にするかを選びます。\nその他は何もさわらなくても大丈夫です。</p>\n<p>入力ができたら\"Create repository\"を押してリポジトリを作ってください。</p>\n<p>今回は\"ripojitori\"というリポジトリを作って進めることにします。</p>\n<p>リポジトリができたらQuick setupの画面になると思います。そこのHTTPSのボタンを押してその右側のリンクをコピーしておいてください。</p>\n<h2>ローカルリポジトリのセットアップ(clone, init)</h2>\n<p>\"git clone\"コマンドでリモートリポジトリをローカルに落とせます。\n試しにやってみると君がクローンしようとしたリポジトリは空だよと怒られます。\nその通りですね（笑）\nただ、共同開発などをする際は元々リモートリポジトリに何か入っていることが多いのでこのコマンドも覚えておいてください。</p>\n<pre><code class=\"language-bash\">git clone \"さっきコピーしたリンク\"\n> warning: You appear to have cloned an empty repository.\n</code></pre>\n<p>まず何かファイルを作ってみましょう。\nとりあえず\"# リポジトリ名\"という文字が入ったテキストファイルを作ってみます。\nこれでREADME.mdには\"# リポジトリ名\"という文字が入っている状態です。(※ちなみにリポジトリ名やディレクトリ名は自分のでつけて良いですが、\"README.md\"の名前は変えないでください)</p>\n<p>このままではgithubに追加できないのでまず現在のディレクトリ(この解説どうりならさっき作った~/ripojitori)を\"git init\"コマンドで初期化します。</p>\n<p>下の文では/home/densan/.gitに空のgitリポジトリを初期化したよ〜と言っています。</p>\n<pre><code class=\"language-bash\">echo \"# リポジトリ名\" > README.md\ngit init\n> Initialized empty Git repository in /home/densan/dhirekutori/.git/\n</code></pre>\n<h2>ローカルリポジトリのセットアップ(add, commit ,push)</h2>\n<p>まず\"git add\"コマンドでにさっき書いたREADME.mdをgitに管理してもらいます。</p>\n<pre><code class=\"language-bash\">git add README.md\n</code></pre>\n<p>次にgitではコミットということをしなければいけません。\nコミットとはでバックアップをつくるようなものでコミットするとその時点でのファイルの内容が記録されます。\nまた、何度かコミットしている場合過去のコミットに戻ることもできます。\nこれによりバージョン管理ができるのです。</p>\n<p>ターミナルでは\"git commit\"コマンドとオプションの\"-m\"を基本的につけます。\n\"-m\"はコメントをつけるという意味で実際にコミットするときは下のようにしてください。</p>\n<pre><code class=\"language-bash\">git commit -m \"コミット名\"\n</code></pre>\n<p>すると長い文章がでてくると思いますがおそらくこのように書かれているはずです。\nおまえはだれやねんと...</p>\n<pre><code class=\"language-bash\">> Author identity unknown\n\n*** Please tell me who you are.\n</code></pre>\n<p>なので教えてあげましょう</p>\n<pre><code class=\"language-bash\">git config --global user.name \"最初に作ったユーザー名\"\ngit config --global user.email \"最初に作ったアカウントのメールアドレス\"\n</code></pre>\n<p>するとこのような文章が返ってきます。\nコミット成功です！</p>\n<pre><code class=\"language-bash\">> 1 file changed, 1 insertion(+)\n</code></pre>\n<p>では最後にこのコミットをプッシュしましょう。\nプッシュとはリモートリポジトリにコミットを送ることです。\nまずリモートリポジトリを登録しなければなりません。\n\"git remote add origin\"コマンドでリモートリポジトリを設定します。\n\"git push origin master\"コマンドオプションの\"-u\"を初回プッシュのみつけてください。\nこの時にユーザー名とパスワードを聞かれると思うので入力してください。</p>\n<pre><code class=\"language-bash\">git remote add origin https://github.com/\"ユーザー名\"/\"リポジトリ名\".git\ngit push -u origin master\n</code></pre>\n<p>このように返ってくればプッシュは成功です。\ngithub.comでもREADME.mdがあることが確認できると思います。</p>\n<pre><code class=\"language-bash\">> * [new branch]      master -> master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\n</code></pre>\n<h2>プッシュ2回目以降の使い方</h2>\n<p>これだけで大丈夫です。</p>\n<pre><code class=\"language-bash\">git add \"新しいファイルもしくは変更したファイル\"\ngit commit -m \"コミット名\"\ngit push\n</code></pre>\n<h2>ローカルリポジトリを更新したいとき</h2>\n<p>他の人と共同開発している場合はリモートリポジトリが更新されているかもしれません。\nその更新をとってくるには\"git pull\"を使ってください</p>\n<pre><code class=\"language-bash\">git pull https://github.com/\"ユーザー名\"/\"リポジトリ名\".git\n</code></pre>\n<h2>なぜかうまくいかないとき</h2>\n<p>上の文に書いている\"\"は不要です！実際は入力しないでください。</p>","frontmatter":{"slug":"git-setup","title":"gitセットアップガイド"}}},"pageContext":{"id":"126b5da1-371b-5a10-9894-33235767735e","frontmatter__slug":"git-setup","__params":{"frontmatter__slug":"git-setup"}}},"staticQueryHashes":["143701507"]}